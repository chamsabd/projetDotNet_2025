name: dockercompose5328585176187164620
services:
  api:
    build:
      context: D:\DATA\Eniso_S22025\Docker\projetsol
      dockerfile: projet/Dockerfile
    depends_on:
      db:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Host=db;Database=postgres_db;Username=postgres_user;Password=password
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 80
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\chams\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\chams\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\chams\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\chams\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  db:
    container_name: userRoleDB
    environment:
      POSTGRES_DB: postgres_db
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres_user
    image: postgres
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume: {}
  pgadmin:
    depends_on:
      db:
        condition: service_started
        required: true
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    image: dpage/pgadmin4
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 80
        published: "5000"
        protocol: tcp
    restart: always
networks:
  app_network:
    name: dockercompose5328585176187164620_app_network
    driver: bridge
volumes:
  postgres_data:
    name: dockercompose5328585176187164620_postgres_data